name: Setup
description: Setup Nix & SSH

inputs:
  ts-client-id:
    description: Tailscale OAuth Client ID
    required: false
  ts-secret:
    description: Tailscale OAuth Secret
    required: false
  hostname:
    description: Hostname for SSH
    required: false
  ssh-key:
    description: Private key for SSH
    required: false

runs:
  using: composite

  steps:
    - name: Install Nix
      uses: nixbuild/nix-quick-install-action@v30
      with:
        nix_conf: |
          accept-flake-config = true
          build-users-group =

    - name: Setup Cache
      uses: nix-community/cache-nix-action@v6
      if: ${{ ! fromJSON(env.ACT) }}
      with:
        primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
        restore-prefixes-first-match: nix-${{ runner.os }}-
        purge: true
        purge-prefixes: nix-${{ runner.os }}-
        purge-created: 0
        purge-primary-key: always

    - name: Install Tailscale
      uses: tailscale/github-action@v3 # https://github.com/tailscale/github-action/issues/120
      if: ${{ ! fromJSON(env.ACT) && inputs.ts-client-id && inputs.ts-secret }}
      with:
        oauth-client-id: ${{ inputs.ts-client-id }}
        oauth-secret: ${{ inputs.ts-secret }}
        tags: tag:deploy

    - name: Add Host
      if: ${{ inputs.hostname }}
      shell: bash
      run: |
        mkdir -p ~/.ssh
        until ssh-keyscan ${{ inputs.hostname }} >> ~/.ssh/known_hosts; do sleep 5; done

    - name: Setup SSH Key
      uses: webfactory/ssh-agent@v0.9.1
      if: ${{ fromJSON(env.ACT) && inputs.ssh-key }}
      with:
        ssh-private-key: ${{ inputs.ssh-key }}
